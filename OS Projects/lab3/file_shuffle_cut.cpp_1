110                                       file_name_stream.str().c_str());
51         cout << "Could not open output file " <<  filename << endl;
11 #include <iostream>
69         return usage(argv[program_name_index], wrong_number_of_arguments);
119     cout << lines_per_fragment << " lines_per_fragment" << endl;
35 };
17 
109         int result =  write_fragment (start, stop,
26 const int file_name_index = 1;
101     vector<numbered_line>::const_iterator stop = start + lines_per_fragment;
115 
39     cout << "usage: " << program_name 
108         file_name_stream << argv[file_name_index] << "_" << fragment;
2 // Purpose: reads lines of a text file and numbers them, shuffles them, and
75         cout << "Could not open file " <<  argv[file_name_index] << endl;
56         ofs << iter->number << " " << iter->text << endl;
59 
18 // return codes for success or failure
32     numbered_line() : number(0) {}
116     // report statistics for what was done
91     int fragments;
86 
57         iter++;
12 #include <fstream>
14 #include <algorithm>
42 }
27 const int fragments_index = 2;
62 
104     for (int fragment = 1; fragment <= fragments; ++fragment) {
58     }
30 // struct to hold a numbered line of text
96     }
13 #include <vector>
68         // suggest how to run the program correctly
3 //          cuts them into separate files with fragments of the original text
114     }
71 
102 
9 // ./file_shuffle_cut file_shuffle_cut.cpp 3
22 const int output_file_open_failed = -3;
66     // check command line argument count
